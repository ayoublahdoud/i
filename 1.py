# -*- coding: utf-8 -*-
"""1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CYs2TYtgapvAwQBe2gDpf5R7SZIvHVCS
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Chargement des datasets
train_df = pd.read_csv('train.csv')
test_df = pd.read_csv('test.csv')

# Préparation des données d'entraînement
X_train = train_df.drop(['Unnamed: 0', 'Salary'], axis=1)
y_train = train_df['Salary']

# Entraînement du modèle de régression linéaire
model = LinearRegression()
model.fit(X_train, y_train)

# Préparation des données de test
X_test = test_df.drop(['Unnamed: 0', 'Id'], axis=1)

# Prédiction des salaires sur le dataset de test
predicted_salaries = model.predict(X_test)
print(predicted_salaries)

train_predictions = model.predict(X_train)
rmse_train = mean_squared_error(y_train, train_predictions, squared=False)  # `squared=False` pour obtenir directement la racine carrée
r2_train = r2_score(y_train, train_predictions)

print(f"RMSE sur l'ensemble d'entraînement: {rmse_train}")
print(f"R² sur l'ensemble d'entraînement: {r2_train}")